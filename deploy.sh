#!/bin/bash
set -e # –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è, –µ—Å–ª–∏ –ª—é–±–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤–µ—Ä–Ω–µ—Ç –æ—à–∏–±–∫—É

# --- 1. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã Docker Compose ---
# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏ –∫–æ–º–∞–Ω–¥–∞ 'docker compose' (–Ω–æ–≤—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å)
if docker compose version &>/dev/null; then
    DOCKER_COMPOSE_CMD="docker compose"
# –ï—Å–ª–∏ –Ω–µ—Ç, –ø—Ä–æ–≤–µ—Ä—è–µ–º 'docker-compose' (—Å—Ç–∞—Ä—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å)
elif docker-compose version &>/dev/null; then
    DOCKER_COMPOSE_CMD="docker-compose"
# –ï—Å–ª–∏ –Ω–∏ –æ–¥–Ω–∞ –∏–∑ –∫–æ–º–∞–Ω–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤—ã—Ö–æ–¥–∏–º —Å –æ—à–∏–±–∫–æ–π
else
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –Ω–∏ 'docker compose', –Ω–∏ 'docker-compose'."
    echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ."
    exit 1
fi
echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞: '$DOCKER_COMPOSE_CMD'"


# --- 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ ---
if [ -z "$1" ]; then
    echo "Usage: ./deploy.sh [pull | build]"
    echo ""
    echo "  pull  - –°–∫–∞—á–∞—Ç—å –≥–æ—Ç–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã –∏–∑ Docker Hub (–±—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ)."
    echo "  build - –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞ –ø—Ä—è–º–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)."
    exit 1
fi

MODE=$1

# --- –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö ---
export $(grep -v '^#' .env | xargs)

# --- –í—Ö–æ–¥ –≤ Docker Hub ---
echo "üîê –í—Ö–æ–¥ –≤ Docker Hub –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin

echo "üöÄ –ó–∞–ø—É—Å–∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≤ —Ä–µ–∂–∏–º–µ '$MODE'..."

# --- 3. –°–∫–∞—á–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ Git ---
echo "üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–∑ Git..."
git pull origin main
git submodule sync --recursive
git submodule update --init --remote --merge

# --- 4. –û–±—Ä–∞–±–æ—Ç–∫–∞ Docker-–æ–±—Ä–∞–∑–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞ ---
if [ "$MODE" == "pull" ]; then
    echo "üîΩ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö Docker-–æ–±—Ä–∞–∑–æ–≤ –∏–∑ Docker Hub..."
    $DOCKER_COMPOSE_CMD -f docker-compose.prod.yml pull
elif [ "$MODE" == "build" ]; then
    echo "üõ†Ô∏è  –°–±–æ—Ä–∫–∞ –≤—Å–µ—Ö –æ–±—Ä–∞–∑–æ–≤ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞ (–∏–≥–Ω–æ—Ä–∏—Ä—É—è –∫–µ—à)..."
    # –î–æ–±–∞–≤–ª—è–µ–º --no-cache, —á—Ç–æ–±—ã –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –≤—Å–µ —Å–ª–æ–∏
    $DOCKER_COMPOSE_CMD -f docker-compose.prod.yml build --no-cache
else
    echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º: '$MODE'. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'pull' –∏–ª–∏ 'build'."
    exit 1
fi

# --- 5. –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤—ã–µ) ---
echo "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
# –û–±—Ä–∞–∑ backend —É–∂–µ –±—ã–ª —Å–æ–±—Ä–∞–Ω –Ω–∞ —à–∞–≥–µ –≤—ã—à–µ, –ø–æ—ç—Ç–æ–º—É –∫–æ–º–∞–Ω–¥–∞ run —Å—Ä–∞–±–æ—Ç–∞–µ—Ç
$DOCKER_COMPOSE_CMD -f docker-compose.prod.yml run --rm backend npm run migration:run:prod

# --- 6. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä Nginx ---
# –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –æ–Ω –ø–æ–¥—Ö–≤–∞—Ç–∏—Ç –Ω–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥, –µ—Å–ª–∏ –æ–Ω –∏–∑–º–µ–Ω–∏–ª—Å—è
echo "üî® –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ Nginx..."
$DOCKER_COMPOSE_CMD -f docker-compose.prod.yml rm -s -f nginx || true

# --- 7. –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã ---
echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
# –§–ª–∞–≥ --build –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω, —Ç–∞–∫ –∫–∞–∫ –º—ã —É–∂–µ –≤—Å—ë —Å–æ–±—Ä–∞–ª–∏ —è–≤–Ω–æ
$DOCKER_COMPOSE_CMD -f docker-compose.prod.yml up -d

echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
