#!/bin/bash
set -e # –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è, –µ—Å–ª–∏ –ª—é–±–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤–µ—Ä–Ω–µ—Ç –æ—à–∏–±–∫—É

# --- 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ ---
if [ -z "$1" ]; then
    echo "Usage: ./deploy.sh [pull | build]"
    echo ""
    echo "  pull  - Pull pre-built images from Docker Hub (faster deployment)."
    echo "  build - Build images from source directly on the server (for development)."
    exit 1
fi

MODE=$1

# --- –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö ---
export $(grep -v '^#' .env | xargs)

# --- –í—Ö–æ–¥ –≤ Docker Hub ---
echo "üîê Logging in to Docker Hub to pull private images..."
echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin

echo "üöÄ Starting deployment in '$MODE' mode..."

# 2. –°–∫–∞—á–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ Git
echo "üîÑ Pulling latest changes from Git..."
git pull origin main
git submodule sync --recursive
git submodule update --init --remote --merge

# --- 3. –û–±—Ä–∞–±–æ—Ç–∫–∞ Docker-–æ–±—Ä–∞–∑–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞ ---
if [ "$MODE" == "pull" ]; then
    echo "üîΩ Pulling new Docker images from Docker Hub..."
    docker compose -f docker-compose.prod.yml pull
elif [ "$MODE" == "build" ]; then
    echo "üõ†Ô∏è  Building all images from source (ignoring cache)..."
    # –î–æ–±–∞–≤–ª—è–µ–º --no-cache, —á—Ç–æ–±—ã –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –≤—Å–µ —Å–ª–æ–∏
    docker compose -f docker-compose.prod.yml build --no-cache
else
    echo "‚ùå Invalid mode: '$MODE'. Please use 'pull' or 'build'."
    exit 1
fi

# 4. –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤—ã–µ)
echo "üîÑ Applying database migrations..."
# –û–±—Ä–∞–∑ backend —É–∂–µ –±—ã–ª —Å–æ–±—Ä–∞–Ω –Ω–∞ —à–∞–≥–µ –≤—ã—à–µ, –ø–æ—ç—Ç–æ–º—É –∫–æ–º–∞–Ω–¥–∞ run —Å—Ä–∞–±–æ—Ç–∞–µ—Ç
docker compose -f docker-compose.prod.yml run --rm backend npm run migration:run:prod

# 5. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä Nginx, —á—Ç–æ–±—ã –æ–Ω –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø–æ–¥—Ö–≤–∞—Ç–∏–ª –Ω–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥
echo "üî® Forcing Nginx container recreation..."
docker compose -f docker-compose.prod.yml rm -s -f nginx || true

# 6. –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
echo "üöÄ Starting all services..."
# –§–ª–∞–≥ --build –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω, —Ç–∞–∫ –∫–∞–∫ –º—ã —É–∂–µ –≤—Å—ë —Å–æ–±—Ä–∞–ª–∏ —è–≤–Ω–æ
docker compose -f docker-compose.prod.yml up -d

echo "‚úÖ Deployment finished successfully!"