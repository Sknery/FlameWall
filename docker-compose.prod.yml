version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.prod
    image: flamewall-backend:latest # <-- ДОБАВИТЬ ЭТУ СТРОКУ
    container_name: flamewall_backend_prod
    restart: unless-stopped
    environment:
      - FORCE_COLOR=1 # Значение может быть 1, 2 или 3. 1 - базовые цвета.
    env_file: ./.env
    volumes:
      # --- ИЗМЕНЕНИЕ 1: Подключаем именованный volume ---
      - uploads_data:/usr/src/app/uploads
    command: |
      sh -c "
        mkdir -p /usr/src/app/uploads/avatars && \
        mkdir -p /usr/src/app/uploads/banners && \
        mkdir -p /usr/src/app/uploads/content && \
        mkdir -p /usr/src/app/uploads/pages && \
        chmod -R 755 /usr/src/app/uploads && \
        exec node dist/main
      "
    networks:
      - flamewall_net
    depends_on:
      - db

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.prod
      args:
        - VITE_FULL_API_URL=${VITE_FULL_API_URL}
    image: flamewall-frontend:latest # <-- ДОБАВИТЬ ЭТУ СТРОКУ
    container_name: flamewall_frontend_prod
    restart: unless-stopped
    networks:
      - flamewall_net

  db:
    image: postgres:15
    container_name: flamewall_db_prod
    restart: unless-stopped
    env_file: ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - flamewall_net

  nginx:
    image: nginx:alpine
    container_name: flamewall_nginx_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      # --- ИЗМЕНЕНИЕ 2: Подключаем ТОТ ЖЕ САМЫЙ именованный volume ---
      # Nginx будет читать файлы из этого общего хранилища
      - uploads_data:/usr/share/nginx/html/uploads:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot:ro
    depends_on:
      - frontend
      - backend
    networks:
      - flamewall_net

volumes:
  postgres_data:
  uploads_data:

networks:
  flamewall_net:
    driver: bridge