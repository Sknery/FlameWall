version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.prod
    image: maximceahur/flamewall-backend:latest # <-- ДОБАВИТЬ ЭТУ СТРОКУ
    container_name: flamewall_backend_prod
    restart: unless-stopped
    env_file: ./.env
    volumes:
      - ./uploads:/usr/src/app/uploads
    networks:
      - flamewall_net
    depends_on:
      - db

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.prod
      args:
        - REACT_APP_FULL_API_URL=${REACT_APP_FULL_API_URL}
    image: maximceahur/flamewall-frontend:latest # <-- ДОБАВИТЬ ЭТУ СТРОКУ
    container_name: flamewall_frontend_prod
    restart: unless-stopped
    networks:
      - flamewall_net

  db:
    image: postgres:15
    container_name: flamewall_db_prod
    restart: unless-stopped
    env_file: ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - flamewall_net

  nginx:
    image: nginx:alpine
    container_name: flamewall_nginx_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./uploads:/usr/share/nginx/html/uploads:ro
      # Сертификаты (чтобы Nginx их нашел)
      - /etc/letsencrypt:/etc/letsencrypt:ro
      # Файлы для проверки Certbot (для авто-обновления)
      - /var/www/certbot:/var/www/certbot:ro
    depends_on:
      - frontend
      - backend
    networks:
      - flamewall_net

volumes:
  postgres_data:

networks:
  flamewall_net:
    driver: bridge