# docker-compose.yml

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: flamewall_frontend_dev
    # Пробрасываем порт 3000 из контейнера на порт 5173 вашего компьютера
    # Это позволит вам открывать http://localhost:5173 в браузере
    ports:
      - "5173:3000"
    # Эти переменные КЛЮЧЕВЫЕ для работы hot-reload в Docker
    environment:
      - CHOKIDAR_USEPOLLING=true # <-- ДОБАВЛЕНО: Заставляет библиотеку слежения за файлами работать в стабильном режиме
    # Связываем папку с кодом для live-reload
    # Все изменения в папке frontend будут сразу видны в контейнере
    volumes:
      - ./frontend:/app
      # Эта строка предотвращает затирание node_modules из контейнера
      # локальной пустой папкой node_modules
      - /app/node_modules
    restart: unless-stopped
    networks:
      - flamewall_net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: flamewall_backend_dev
    # Пробрасываем порт 3000 бэкенда на 3001 вашего компьютера
    ports:
      - "3001:3000"
    environment:
      - FORCE_COLOR=1 # Для цветных логов в Docker
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - ./.env
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - flamewall_net

  db:
    image: postgres:15
    container_name: flamewall_db_dev # Дадим уникальное имя для разработки
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data # Используем отдельный volume для разработки
    networks:
      - flamewall_net

  pgadmin:
    image: dpage/pgadmin4
    container_name: flamewall_pgadmin_dev # Уникальное имя
    restart: unless-stopped
    logging:
      driver: "none"
    env_file:
      - ./.env
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data_dev:/var/lib/pgadmin # Отдельный volume
    networks:
      - flamewall_net

volumes:
  postgres_data_dev: # Уникальное имя volume
  pgadmin_data_dev:  # Уникальное имя volume

networks:
  flamewall_net:
    driver: bridge