# docker-compose.yml

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: flamewall_frontend_dev
    ports:
      - "5173:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - flamewall_net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: flamewall_backend_dev
    ports:
      - "3001:3000"
    environment:
      - FORCE_COLOR=1 
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - flamewall_net

  db:
    image: postgres:15
    container_name: flamewall_db_dev 
    restart: unless-stopped
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data 
      - ./docker/postgres:/docker-entrypoint-initdb.d # <-- ДОБАВЬТЕ ЭТУ СТРОКУ
    networks:
      - flamewall_net

  pgadmin:
    image: dpage/pgadmin4
    container_name: flamewall_pgadmin_dev 
    restart: unless-stopped
    logging:
      driver: "none"
    env_file:
      - ./.env
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data_dev:/var/lib/pgadmin 
    networks:
      - flamewall_net

volumes:
  postgres_data_dev:
  pgadmin_data_dev:

networks:
  flamewall_net:
    driver: bridge